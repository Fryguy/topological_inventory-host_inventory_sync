#!/usr/bin/env ruby

lib = File.expand_path("../../lib", __FILE__)
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)

STDOUT.sync = true

require "bundler/setup"
require "topological_inventory/host_inventory_sync"

def parse_args
  require 'optimist'
  opts = Optimist.options do
    opt :queue_host, "Hostname of the Platform's kafka queue", :type => :string, :required => ENV["QUEUE_HOST"].nil?, :default => ENV["QUEUE_HOST"]
    opt :queue_port, "Port of the Platform's kafka queue", :type => :int, :required => false, :default => (ENV["QUEUE_PORT"] || 9092).to_i
    opt :topological_inventory_api, "Hostname of the Topological Inventory route", :type => :string, :required => ENV["TOPOLOGICAL_INVENTORY_API"].nil?, :default => ENV["TOPOLOGICAL_INVENTORY_API"]
    opt :host_inventory_api, "Hostname of the Host Inventory api route", :type => :string, :required => ENV["HOST_INVENTORY_API"].nil?, :default => ENV["HOST_INVENTORY_API"]
    opt :ingress_api, "Hostname of the ingress-api route", :type => :string, :default => ENV["INGRESS_API"] || "http://localhost:9292"
  end

  opts
end

args = parse_args

ingress_api_uri = URI(args[:ingress_api])

TopologicalInventoryIngressApiClient.configure.scheme = ingress_api_uri.scheme || "http"
TopologicalInventoryIngressApiClient.configure.host   = "#{ingress_api_uri.host}:#{ingress_api_uri.port}"

host_inventory_sync = TopologicalInventory::HostInventorySync.new(
  args[:topological_inventory_api], args[:host_inventory_api], args[:queue_host], args[:queue_port]
)

host_inventory_sync.run
